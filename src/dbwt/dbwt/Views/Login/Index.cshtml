@using System.Configuration
@using MySql.Data.MySqlClient
@using Microsoft.AspNetCore.Mvc
@using System.Web
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Razor;
@using Microsoft.AspNetCore.Hosting;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Session
@using Microsoft.AspNetCore.Builder
@{

    //ASPNET CORE WORKAROUND
    HttpContext cont = HttpContextNew.get_con();


 
  
    
    if (cont.Request.Method == "POST" && !String.IsNullOrEmpty(cont.Session.Get<String>("user")) && !String.IsNullOrEmpty(cont.Request.Form["action"]) &&  cont.Request.Form["action"] == "logout")
            {
                cont.Session.Set<String>("user", null);
                cont.Session.Set<String>("role", "Gast");
                ViewData["state"] = 0;
            }

                if (String.IsNullOrEmpty(cont.Session.Get<String>("user")))
            {



                if (cont.Request.Method == "POST" && !String.IsNullOrEmpty(cont.Request.Form["username"]) && !String.IsNullOrEmpty(cont.Request.Form["password"]) &&  cont.Request.Form["action"] == "login")
                {
                    string hash_com = PasswordSecurity.PasswordStorage.CreateHash(cont.Request.Form["password"]);
                    string hash_db = "";
                    string role = "";
                    MySqlConnection con1 = new MySqlConnection(DB_ACCESS.Instance.get_conn_string()); // lässt sich per using(){} noch besser handhaben
                    try
                    {

                        con1.Open();
                        MySqlCommand cmd;
                        cmd = con1.CreateCommand();
                        cmd.CommandText = "SELECT * FROM `FE-Nutzer` WHERE `Loginname`='"+cont.Request.Form["username"]+"' LIMIT 1";
                        MySqlDataReader r = cmd.ExecuteReader();
                        while (r.Read())
                        {
                            hash_db += (String)r["Algorythmus"];
                            hash_db += ":";
                            hash_db += "64000";
                            hash_db += ":";
                            hash_db += ((uint)r["Strech"]).ToString();
                            hash_db += ":";
                            hash_db += (String)r["Salt"];
                            hash_db += ":";
                            hash_db += (String)r["Hash"];                
                            role = (String)r["Benutzerrolle"];
                        }
                        con1.Close();


                        if (PasswordSecurity.PasswordStorage.VerifyPassword(cont.Request.Form["password"], hash_db))
                        {
                            ViewData["state"] = 1;
                            ViewData["user"] = cont.Request.Form["username"];
                            cont.Session.Set<String>("user", cont.Request.Form["username"]);
                            cont.Session.Set<String>("role", role);
                        }
                        else
                        {
                            ViewData["username"] = cont.Request.Form["username"];
                            ViewData["state"] = 3;
                        }

                    }
                    catch (Exception e)
                    {
                        ViewData["state"] = 2;
                    }                  
            }
                else
                {
                    ViewData["state"] = 0;
                }
            }
            else
            {
                ViewData["state"] = 1;
                ViewData["user"] = cont.Session.Get<String>("user");
            }







    ViewData["Title"] = "Mensa Order System | Login";
    if(ViewData["state"] == null)
    {
        <h1>ERROR</h1>
        return;
    }
    if ((int)ViewData["state"] == 2)
    {
        <h1>PASSWORT ODER BENUTERNAME FALSCH</h1>
        <form action="/Login" method="post">
            <div class="container" style="color: rgb(255, 0, 0)" ;>
                <label><b>Username</b></label>
                <input type="text" placeholder="Enter Username" name="username" value="@ViewData["username"]" required>
                <label><b>Password</b></label>
                <input type="password" placeholder="Enter Password" name="password" required>
                <input type="hidden" name="action" value="login" />
                <input type="hidden" name="method" value="post" />
                <button type="submit">Login</button>
            </div>
            <div class="container" style="background-color:#f1f1f1">
                <button type="button" class="cancelbtn">Cancel</button>
            </div>
        </form>
        return;
    }

    if ((int)ViewData["state"] == 0)
    {
        <form action="/Login" method="post">
            <div class="container">
                <label><b>Username</b></label>
                <input type="text" placeholder="Enter Username" name="username" required>
                <label><b>Password</b></label>
                <input type="password" placeholder="Enter Password" name="password" required>
                <input type="hidden" name="action" value="login" />
        <input type="hidden" name="method" value="post" />
                <button type="submit">Login</button>
            </div>
            <div class="container" style="background-color:#f1f1f1">
                <button type="button" class="cancelbtn">Cancel</button>
            </div>
        </form>
    }
    else if ((int)ViewData["state"] == 3)
    {
        <h1>PASSWORT ODER BENUTERNAME FALSCH</h1>
        <form action="/Login" method="post">
            <div class="container" style="color: rgb(255, 0, 0)">
                <label><b>Username</b></label>
                <input type="text" placeholder="Enter Username" name="username" value="@ViewData["username"]" required>
                <label><b>Password</b></label>
                <input type="password" placeholder="Enter Password" name="password" required>
                <input type="hidden" name="action" value="login"/>
        <input type="hidden" name="method" value="post" />
                <button type="submit">Login</button>
            </div>
            <div class="container" style="background-color:#f1f1f1">
                <button type="button" class="cancelbtn">Cancel</button>
            </div>
        </form>
    }
    else if ((int)ViewData["state"] == 1)
    {
        MySqlConnection con1 = new MySqlConnection(DB_ACCESS.Instance.get_conn_string()); // lässt sich per using(){} noch besser handhaben
        try
        {
            con1.Open();
            MySqlCommand cmd;
            cmd = con1.CreateCommand();
            if (ViewData["user"] == null) { return; }
            cmd.CommandText = "SELECT * FROM `FE-Nutzer` LEFT JOIN `Mitarbeiter` ON `Mitarbeiter`.`FK_Fe-Nutzer` = `FE-Nutzer`.`Nr` LEFT JOIN `Student` ON `Student`.`FK_Fe-Nutzer` = `FE-Nutzer`.`Nr` WHERE `Loginname`='" + ViewData["user"] + "' LIMIT 1";
            MySqlDataReader r = cmd.ExecuteReader();
            while (r.Read())
            {
                if ((String)r["Benutzerrolle"] == "Student")
                {
                    <span>Hallo,<b>@ViewData["user"]</b> (@r["Matrikelnummer"]). Sie sind Angemeldet als 
                <b>@r["Studiengang"]</b><br />
                </span>            
                }
                else if ((String)r["Benutzerrolle"] == "Mitarbeiter")
                {
                    <h2>@r["MA-Nummer"]</h2><br />
                    <h2>@r["Büro"]</h2><br />
                }
            }
            con1.Close();

            <br /><br />
            <form action="Login" method="post">
<input type="hidden" name="action" value="logout" />
                <input type="submit" value="ABMELDEN" />

            </form>
        }
        catch (Exception e)
        {
                    <p class="error">Das hat nicht geklappt.</p>
                    <pre>@e.Message</pre>
        }



    }
}









